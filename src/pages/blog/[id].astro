---
import { load as cheerioLoad } from 'cheerio';
import hljs from "highlight.js";

import PageTitle from "@components/Page/Title.astro";
import Hljs from "@components/Page/Hljs.astro";

import Layout from "@root/Layout.astro";
import { Article, getContents } from "@libraries/blog";
import HashTags from "@components/Page/HashTags.astro";


interface Props { article: Article };


export const toMeta = (article: Article) => ({
    params: {id: article.id}, props: {article: article}
});
export async function getStaticPaths() {
  // ブログ記事を読み込み、整理する。
  var allArticles = [];
  for await (let articles of getContents())
    for (let article of articles)
      allArticles.push(toMeta(article));
  return allArticles;
};


const { article } = Astro.props;


// 記事内のコードブロックの色塗りを行う。
var html = article.content;
var usedHljs = false;
if (article.content.includes("<code") && article.content.includes("<pre>")) {
  let $ = cheerioLoad(article.content);
  $("pre code").each((_, rawElement) => {
    let e = $(rawElement);
    e.html(hljs.highlight(
      e.text(), {language : rawElement
        .attribs.class.slice(9)}
    ).value);
    e.addClass("hljs");
  });
  html = $.html();
  usedHljs = true;
};
---
<style>
  time { font-style: italic; }
  .metadata .content { display: flex; justify-content: space-between; }
  .metadata .content .left { padding-right: 1em; }
  .metadata .content .left #published-at { padding-right: 0.5em; }
  .metadata .left span, time { display: inline-block; }
</style>
<Layout
    title={article.title} description={article.tags
      ? `#${article.tags.join(" #")}` : ""}>
  {usedHljs ? <Hljs slot="meta-head" /> : null}
  <!-- メタデータ -->
  <PageTitle>{article.title}</PageTitle>
  <p class="sp-only">
  <div class="metadata">
    <div class="content">
      <span class="left">
        <time id="published-at" datetime={article.publishedAt}>
          {`PublishedAt: ${(new Date(article.publishedAt)).toLocaleString("ja-JP")}`}
        </time>
        <time id="revised-at" class="pc-only" datetime={article.revisedAt}>
          {`RevisedAt: ${(new Date(article.revisedAt)).toLocaleString("ja-JP")}`}
        </time>
      </span>
      <span class="right"><HashTags tags={article.tags} /></span>
    </div>
    <hr>
  </div>
  <!-- 本文 -->
  <div set:html={html} />
</Layout>